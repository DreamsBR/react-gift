{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItems.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategoria","useState","inputValue","setInput","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","value","onChange","target","PropType","func","isRequired","getGifts","cateogy","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItems","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","console","log","useFetchGifs","GifExpertApp","cantegorias","ReactDOM","render","document","getElementById"],"mappings":"sNAGaA,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAEzB,EAA+BC,mBAAS,IAAxC,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAQ,IACzBR,GAAa,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACrCN,EAAS,MAMb,SACI,uBACIO,KAAK,OACLC,YAAY,aACZC,MAAOV,EACPW,SApBc,SAACR,GAEvBF,EAASE,EAAES,OAAOF,aAwB1Bb,EAAYgB,SAAW,CACnBf,aAAce,IAASC,KAAKC,Y,mCCjCnBC,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,gDACiCC,UAAUH,GAD3C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAQF,EAAIE,MACZV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QARrB,kBAabM,GAba,4CAAH,sDCCRO,EAAe,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAKrC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJHO,EAAU,SAAC,GAAe,IAAdnB,EAAa,EAAbA,QAErB,ECJwB,SAACA,GACzB,MAA0BlB,mBAAS,CAC/ByB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAZAC,qBAAW,WACPxB,EAASC,GACJwB,MAAK,SAAAC,GACEC,QAAQC,IAAIF,GACZH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAI1B,CAACpB,IAEIqB,EDhBkBO,CAAc5B,GAAhCO,EAAP,EAAOA,KAAOa,EAAd,EAAcA,QAId,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,sBACZ,qBAAKA,UAAU,YAAf,SAEUT,EAAKE,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAESA,GADAA,EAAIC,aEiBtBkB,EAhCO,WAElB,MAAoC/C,mBAAS,CAAC,YAA9C,mBAAOgD,EAAP,KAAoBjD,EAApB,KASA,OAFA6C,QAAQC,IAAIG,GAGR,eAAC,WAAD,WACI,8CACA,uBAEA,cAAC,EAAD,CAAajD,aAAcA,IAC3B,6BACGiD,EAAYrB,KAAI,SAACvB,GAAD,OACf,cAAC,EAAD,CAAiBc,QAASd,GAAZA,Y,MCjB9B6C,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.8356dce0.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropType  from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategoria}) => {\r\n    \r\n    const [inputValue, setInput] = useState('')\r\n    \r\n    const handleInputChange = (e)=>{\r\n        // console.log( e.target.value );\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    const handleSubmit=  (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length >2 ){\r\n            setCategoria(cats => [inputValue, ...cats])\r\n            setInput('')\r\n        }\r\n        \r\n    }\r\n    \r\n    return (        \r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                placeholder=\"Busque Gif\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange}\r\n            ></input>\r\n        </form>\r\n    )\r\n\r\n}\r\nAddCategory.PropType = {\r\n    setCategoria :PropType.func.isRequired\r\n}\r\n\r\n","\r\nexport const getGifts = async( cateogy ) => {\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(cateogy)}&limit=10&api_key=RCvSBBYEc2Bb1oXdHiuhhoVCS5jn3SWx`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id:img.id,\r\n            title : img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    // console.log(gifs);\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItems = ({id, title, url}) => {\r\n    \r\n    \r\n    // console.log(id, title, url);\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItems } from './GifGridItems';\r\n\r\n// import { GifGridItems } from './GifGridItems';\r\n\r\nexport const GifGrid = ({cateogy}) => {\r\n    // const [contador, setContador] = useState(0)\r\n    const {data , loading} = useFetchGifs( cateogy );\r\n    \r\n\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{cateogy}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\" >Cargando</p> }\r\n            <div className=\"card-read\">\r\n                 \r\n                    { data.map( (img) =>(\r\n                        <GifGridItems \r\n                            key={img.id}\r\n                            { ...img }\r\n                        />\r\n                        \r\n                    )) }\r\n                \r\n            </div>\r\n        </>            \r\n    )\r\n}\r\n","\r\nimport { useEffect, useState } from \"react\"\r\nimport { getGifts } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (cateogy) =>{\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    \r\n        \r\n    useEffect( ()=> {\r\n        getGifts(cateogy)        \r\n            .then(imgs => {                \r\n                    console.log(imgs);\r\n                    setstate({\r\n                        data:imgs,\r\n                        loading:false\r\n                    });\r\n                \r\n            })\r\n    },[cateogy])\r\n\r\n    return state;\r\n}","import React, { Fragment, useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst  GifExpertApp = () => {\r\n\r\n    const [cantegorias, setCategoria] = useState(['Pokemon'])\r\n\r\n    // const handleAdd = () =>{\r\n    //     setCategoria(e => [...e, 'AEA']);\r\n    //     // setCategoria( [ 'Hola comoestas', ...cantegorias]);\r\n    // }\r\n\r\n    console.log(cantegorias);\r\n    \r\n    return (  \r\n        <Fragment>\r\n            <h2>GifExpertApp</h2>\r\n            <hr/>\r\n            {/* <button onClick={handleAdd}>+Agregar</button> */}\r\n            <AddCategory setCategoria={setCategoria}/>\r\n            <ol>\r\n            {  cantegorias.map((e)=> \r\n                <GifGrid key={e} cateogy={e}/>\r\n            )} \r\n               \r\n            \r\n            \r\n               \r\n            </ol>\r\n            \r\n        </Fragment>\r\n    );\r\n    \r\n}\r\n \r\nexport default GifExpertApp ;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}